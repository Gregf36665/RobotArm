Lab Writeup

Introduction
Purpose of lab: The purpose of this lab was to control 5 servos to work together in order to navigate around and move blocks. The goal of this lab was to pick up 4 blocks from pre-specified positions and to stack them all at a single location. The purpose, or takeaway from this project, was to learn how to actively control multiple changing components at once to complete a task.  This robot is a small scale version of robots that work on assembly plants helping to manufacture new products.  In this document we will discuss how we implemented the autonomous movement of the arm and tested it safely.


High-level Design
The robot arm was programmed so we would provide four values, the x,y and z positions as well as the state of the grip.  The arm would then convert these values into certain angles for the servos.  We used trigonometry to calculate all of the required servo angles.  We chose to fix the wrist angle relative to the horizon since we had to fix an angle to get a unique solution.

Detailed Design

Auto level function
To provide one unique solution we had to fix an angle on the robot arm.  The most logical angle to fix was the robot wrist angle.  Instead of keeping the angle fixed relitive to the previous arm section we kept it flat to the horizon.

Mathematics
We used trigonometry to find the shoulder and elbow angles.  (0,0,0) is located at the base of the robot.  First we calculated the radial distance with the pythagorean theorem on the x and y components.  Then we did found the arctan of the x and y to get the base angle.  Then we split the shoulder angle into two parts, one part was from the arctan of the radial distance and the height above or beneath the xy plane.  After that we calculated the change in radial distance and height due to the wrist angle.  We subtracted this off of the total radial distance and height.  This gave us the position that the wrist needed to be placed at.  After that we calculated the hypotoneouse of the triangle formed by the corrected radial distance and the corrected height.  By using laws of cosines on the triangle the elbow angle could be calculated easily.  After that the laws of sines could be applied to find the second half of the shoulder angle.  All angles have been solved for.

Software Design
Our final objective was to have a function that accepts 4 parameters, x,y and z co-ordinates and a boolean specifying if the claw is closed.  This enabled us to move the arm from any position on the grid to any other.  While moving the arm would first move up to ensure that no collsion with objects on the grid would happen.


System Testing
To test the robot wrist angle we reverted back to the code that controlled the robot arms with servos but removed the wrist from the servo control.  This let us quickly test a variety of different angles and visually inspect what was happening.

Conclusion


Appendix




Introduction: A paragraph or two that explains the purpose of the project, which was to programming a robot arm to stack blocks. State your intended audience for the document, which for this lab would be another student at your level who needs to implement the system. Feel free to explain why microcontrollers and robots are important and get the reader interested. Also, briefly explain what to expect in the remainder of the document. 
1. High-Level Design: Describe your design from a high level. Draw a simplified block diagram of the system and explain what you are trying to accomplish. State any requirements or assumptions you had for your design. If there were multiple ways to do the design, explain why you chose your particular approach. 
2. Detailed Design: Include one or more sections that describe the internal details of the blocks in the high-level design. For example, if you used trigonometry to position the arm, you could have a section called "Algorithms." Another section could be labeled "Servo Control," etc. The description given in these sections should be sufficiently detailed that someone could understand what you did and implement it themselves. 
3. Software Design: Explain how your code works. For example, you could show the basic series of operations with a flow chart. You can also refer to different functions in your code, but I recommend you do not bore the reader with your full code, but rather put it in an appendix. 
4. System Testing: Describe the test cases you used, which should be sufficient to convince your reader that the system is working. 
5. Conclusion: Give some parting words to reader summarizing what was done in the project and whether it was successful or not. Briefly explain outstanding things that would have to be looked at in the future if you were not completely successful or discovered unexpected things. 
6. Appendix: Here you could put a listing of your code or any information you feel is too detailed (or boring) for the main project description. 

